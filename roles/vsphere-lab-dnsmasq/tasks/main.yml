---
# tasks file for roles/vsphere-lab-dnsmasq

# install packages
- name: Install packages
  ansible.builtin.yum:
    name: "{{ item }}"
    state: present
  with_items: "{{ packages }}"

# create directories
- name: Create directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: 0755
  with_items:
    - "{{ dnsmasq_tftp_path }}"
    - "{{ dnsmasq_nfs_path }}"
    - "{{ dnsmasq_tftp_path }}/pxelinux.cfg"

# copy files for pxeboot from esxi iso
- name: Check if iso files were copied
  ansible.builtin.stat:
    path: "{{ dnsmasq_tftp_path }}/boot.cfg"
  register: boot_file

- name: Copy esxi 7 iso files if necessary
  ansible.builtin.include_tasks: copy-esxi-iso.yml
  when: not boot_file.stat.exists

# Make chages into files
- name: Replace trailing backspace from boot files
  ansible.builtin.replace:
    path: "{{ item }}"
    regexp: "\/"
    replace: ""
    backup: true
  with_items:
    - "{{ dnsmasq_tftp_path }}/boot.cfg"
    - "{{ dnsmasq_tftp_path }}/efi/boot/boot.cfg"

- name: Add legacy CPU support
  ansible.builtin.set_fact:
    dnsmasq_ks_kernelopt: "{{ dnsmasq_ks_kernelopt }} allowLegacyCPU=true"
  when: allow_legacy_cpu

- name: Configure kernelopt to kickstart file
  ansible.builtin.replace:
    path: "{{ item }}"
    regexp: "kernelopt.+"
    replace: "{{ dnsmasq_ks_kernelopt }}"
    backup: true
  with_items:
    - "{{ dnsmasq_tftp_path }}/boot.cfg"
    - "{{ dnsmasq_tftp_path }}/efi/boot/boot.cfg"

# prepare kickstart file
- name: Create kickstart file
  ansible.builtin.template:
    src: ks.cfg.j2
    dest: "{{ dnsmasq_nfs_path }}/ks.cfg"
    mode: 0644

# prepare syslinux for BIOS boot
- name: Check if pxelinux.0 file was copied
  ansible.builtin.stat:
    path: "{{ dnsmasq_tftp_path }}/pxelinux.0"
  register: pxelinux_file

- name: Copy syslinux files if necessary
  ansible.builtin.include_tasks: download-syslinux.yml
  when: not pxelinux_file.stat.exists

- name: Copy isolinux.cfg to pxelinux.cfg
  ansible.builtin.copy:
    src: "{{dnsmasq_tftp_path}}/isolinux.cfg"
    dest: "{{dnsmasq_tftp_path}}/pxelinux.cfg/default"
    remote_src: true

# dnsmasq configuration
- name: Configure dnsmasq
  ansible.builtin.template:
    src: dnsmasq.conf.j2
    dest: /etc/dnsmasq.conf
    mode: 0644
  notify: restart dnsmasq

- name: Configure hosts
  ansible.builtin.template:
    src: hosts.j2
    dest: /etc/hosts
    mode: 0644
  notify: restart dnsmasq

# nfs configuration
- name: Configure nfs export
  ansible.builtin.template:
    src: exports.j2
    dest: /etc/exports
    mode: 0644
  notify: restart nfs-server
