---
# tasks file for roles/vsphere-lab-resources

- name: Create lab VM root folder
  community.vmware.vcenter_folder:
    hostname: '{{ vcenter_hostname }}'
    username: '{{ vcenter_credentials.username }}'
    password: '{{ vcenter_credentials.password }}'
    validate_certs: "{{ validate_certs }}"
    datacenter_name: "{{ datacenter_name }}"
    folder_name: "{{ root_folder_name }}"
    folder_type: vm
    state: present
  delegate_to: localhost

- name: Create present lab VM folder
  community.vmware.vcenter_folder:
    hostname: '{{ vcenter_hostname }}'
    username: '{{ vcenter_credentials.username }}'
    password: '{{ vcenter_credentials.password }}'
    validate_certs: "{{ validate_certs }}"
    datacenter_name: "{{ datacenter_name }}"
    parent_folder: "{{ root_folder_name }}" 
    folder_name: "{{ lab_folder_name }}"
    folder_type: vm
    state: present
  delegate_to: localhost

- name: Create lab network folder
  community.vmware.vcenter_folder:
    hostname: '{{ vcenter_hostname }}'
    username: '{{ vcenter_credentials.username }}'
    password: '{{ vcenter_credentials.password }}'
    validate_certs: "{{ validate_certs }}"
    datacenter_name: "{{ datacenter_name }}"
    folder_name: "{{ root_folder_name }}"
    folder_type: network
    state: present
  delegate_to: localhost

- name: Gather all VMs in lab folder
  community.vmware.vmware_vm_info:
    hostname: '{{ vcenter_hostname }}'
    username: '{{ vcenter_credentials.username }}'
    password: '{{ vcenter_credentials.password }}'
    validate_certs: "{{ validate_certs }}"
    folder: "{{ lab_full_path }}"
  delegate_to: localhost
  register: vm_info

- name: Set list with created VMs
  set_fact:
    created_vms: "{{ vm_info.virtual_machines | map(attribute='guest_name') | list }}"

- name: Set list with VMs to be created
  set_fact:
    to_be_created_vms: "{{ [vyos_server.name] + esxi_servers | map(attribute='name') | list + infra_servers | map(attribute='name') | list + rdp_servers | map(attribute='name') | list }}"

- name: Creates virtual infra and virtual machines
  include_tasks: create-virtual-infra.yml
  when: (created_vms | length) < (to_be_created_vms | length)

- name: Ensure virtual machine powerstate
  community.vmware.vmware_guest_powerstate:
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_credentials.username }}"
    password: "{{ vcenter_credentials.password }}"
    validate_certs: "{{ validate_certs }}"
    folder: "{{ lab_full_path }}"
    name: "{{ item.name }}"
    state: "{{ item.initial_powerstate }}"
  delegate_to: localhost
  with_items: "{{ [vyos_server] + esxi_servers + infra_servers }}"

- name: Sleeps while VMs are starting 
  wait_for: 
    timeout: 60

- name: Get vyos ip data
  block:

    - name: Wait for VMware tools to become available in vyos vm
      community.vmware.vmware_guest_tools_wait:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_credentials.username }}"
        password: "{{ vcenter_credentials.password }}"
        validate_certs: "{{ validate_certs }}"
        folder: "{{ lab_full_path }}"
        name: "{{ vyos_server.name }}"
        datacenter: "{{ datacenter_name }}"
      delegate_to: localhost
      register: vyos_vm_facts

    - name: Sets vyos provision ipv4 fact
      set_fact: 
        vyos_provision_ip: "{{ vyos_vm_facts.instance.ipv4 }}"

  when: vyos_provision_ip is undefined
